SummarySE(benchmarks,"fmeasure", groups=c("x8"))
summarySE(benchmarks,measurevar="fmeasure", groupvars=c("x8"))
summarySE
summarySE(benchmarks,measurevar="fmeasure", groupvars=c("x8"))
summarySE(benchmarks,measurevar="fmeasure", groupvars=c("X8"))
source('C:/dev/experiment/test_uncertainty_vote.r')
summarySE(benchmarks,measurevar="fmeasure", groupvars=c("X8"))
source('C:/dev/experiment/test_uncertainty_vote.r')
test
source('C:/dev/experiment/test_model.r')
data
source('C:/dev/experiment/test_model.r')
data
source('C:/dev/experiment/test_model.r')
data
source('C:/dev/experiment/test_model.r')
ncol(data)
source('C:/dev/experiment/algo_grid.r')
source('C:/dev/experiment/test_model.r')
benchmarks
source('C:/dev/experiment/test_model.r')
groups[201,]
source('C:/dev/experiment/test_model.r')
spatial_agreement=rowSums(data)/ncol(data)
spatial_agreement
ifelse(ref,spatial_agreement,1-spatial_agreement)
positive_votes_ratio=rowSums(data)/ncol(data)
agreement=ifelse(ref,positive_votes_ratio,1-positive_votes_ratio)
agreement
min(agreement)
which.min(agreement)
which(agreement==0)
which(agreement>0.001)
which(agreement<0.01)
which(agreement<0.05)
which(agreement<0.10)
hist(agreement)
which(ref==TRUE)
hist(agreement[which(ref==TRUE)])
hist(agreement[which(ref==FALSE)])
which.min(agreement[which(ref==FALSE)])
min(agreement[which(ref==FALSE)])
min(agreement[which(ref==TRUE)])
et.seed(21)
set.seed(21)
get.seed()
seed()
seed
?set.seed
?mapply
split(ref, 1:nrow(agreement))
agreement
ref
split(length, 1:length(agreement))
split(ref, 1:length(agreement))
?vapply
cbind(ref,agreement)
test=cbind(ref,agreement)
apply(test,2,function(x){ if (runif(1)<x[2]) {return (!x[1])} else {return(x[1])} })
apply(test,1,FUN=function(x){ if (runif(1)<x[2]) {return (!x[1])} else {return(x[1])} })
test
apply(test,1,FUN=function(x){ if (runif(1)<x[2]) {return (x[1])} else {return(2+x[1])} })
apply(test,1,FUN=function(x){ print(x) if(runif(1)<x[2]) {return (x[1])} else {return(2+x[1])} })
apply(test,1,FUN=function(x){
print(x)
if(runif(1)<x[2]) {return (x[1])}
else {return(2+x[1])}
})
test
tail(test)
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(2+x[1])}
})
tail(test)
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
tail(test)
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) {return (x[1])}
else {return(!x[1])}
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) x[1] else !x[1]
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) x[1] else !x[1]
})
apply(test,1,FUN=function(x){
if(runif(1)<x[2]) x[1] else !x[1]
})
apply(test,1,function(x){ if(runif(1)<x[2]) x[1] else !x[1] })
source('~/.active-rstudio-document')
source('C:/dev/experiment/test_model.r')
NULL
source('C:/dev/experiment/model.r')
source('C:/dev/experiment/test_model.r')
source('~/.active-rstudio-document')
source('C:/dev/experiment/test_model.r')
difficulty=generating_difficulty_map(ref,data)
positive_votes_ratio=rowSums(data)/ncol(data)
agreement=ifelse(ref,positive_votes_ratio,1-positive_votes_ratio)
test=cbind(ref,positive_votes_ratio.agreement)
test=cbind(ref,positive_votes_ratio,agreement)
head(test)
test[1:30]
test[1:30,]
runif(1)
per=apply(cbind(ref,difficulty),1,function(x){ if(runif(1)<=x[2]) x[1] else (!x[1]) })
per
test=cbind(ref,agreement,per)
head(test)
test[1:30]
test[1:30,]
source('C:/dev/experiment/test_model.r')
ceiling(0.25*20)
ceiling(0.30*20)
ceiling(0.30*1)
ceiling(0.30*2)
ceiling(0.30*3)
ceiling(0.30*4)
ceiling(0.30*5)
benchmarks
source('C:/dev/experiment/test_model.r')
source('~/.active-rstudio-document')
source('C:/dev/experiment/test_model.r')
benchmarks
source('~/.active-rstudio-document')
melt(data)
data
str(data)
head(data)
data$id=0
cbind(data,"id"=0)
data=as.data.frame(data)
data
source('C:/dev/experiment/export_data.r')
data
as.matrix(data)
as.data.frame(as.matrix(data))
dd=melt(data, id=c("id","time"))
dd=as.data.frame(as.matrix(data))
dd$id=1:nrow(data)
dd$id
d1=melt(data, id=c("id"))
d1
str(d1)
unique(d1$x2)
unique(d1$X2)
unique(d1$X1)
length(d1$X1)
dd=as.data.frame(as.matrix(data))
dd$id=1:nrow(data)
d1=melt(dd, id=c("id"))
d1
str(d1)
d1$value=ifelse(d1$value,"porn","notporn")
dd=as.data.frame(as.matrix(data))
dd$id=1:nrow(data)
d1=melt(dd, id=c("id")
d1$value=ifelse(d1$value,"porn","notporn"))
dd=as.data.frame(as.matrix(data))
dd$id=1:nrow(data)
d1=melt(dd, id=c("id"))
d1$value=ifelse(d1$value,"porn","notporn"))
dd=as.data.frame(as.matrix(data))
dd$id=1:nrow(data)
d1=melt(dd, id=c("id"))
d1$value=ifelse(d1$value,"porn","notporn")
data=data[1:50,]
dd=as.data.frame(as.matrix(data))
dd$id=1:nrow(data)
d1=melt(dd, id=c("id"))
d1$value=ifelse(d1$value,"porn","notporn")
write.table(d1, file = "foo.csv", sep = "\t", col.names = NA,
qmethod = "double")
str(d1)
data=discretize_all(data.ppp,res)
data=data[1:50,]
dd=as.data.frame(as.matrix(data))
dd$id=1:nrow(data)
d1=melt(dd, id=c("id"))
d1$value=ifelse(d1$value,"porn","notporn")
d1=cbind(d1$variable, d1$id,d1$value)
write.table(d1, file = "foo.csv", sep = "\t", col.names = NA,quote=FALSE,
qmethod = "double")
write.table(d1, file = "foo.csv", sep = "\t", col.names = NA,quote=FALSE,row.names=FALSE
qmethod = "double")
write.table(d1, file = "foo.csv", sep = "\t", col.names = NA,quote=FALSE,row.names=FALSE,            qmethod = "double")
write.table(d1, file = "foo.csv", sep = "\t",quote=FALSE,row.names=FALSE,            qmethod = "double")
data=discretize_all(data.ppp,res)
data=data[1:50,1:10]
dd=as.data.frame(as.matrix(data))
dd$id=1:nrow(data)
d1=melt(dd, id=c("id"))
d1$value=ifelse(d1$value,"porn","notporn")
d1=cbind(d1$variable, d1$id,d1$value)
write.table(d1, file = "foo.csv", sep = "\t", col.names = NA,quote=FALSE,row.names=FALSE,            qmethod = "double")
data=discretize_all(data.ppp,res)
data=data[1:50,1:10]
dd=as.data.frame(as.matrix(data))
dd$id=1:nrow(data)
d1=melt(dd, id=c("id"))
d1$value=ifelse(d1$value,"porn","notporn")
d1=cbind(d1$variable, d1$id,d1$value)
write.table(d1, file = "foo.csv", sep = "\t",quote=FALSE,row.names=FALSE, qmethod = "double")
source('C:/dev/experiment/test_uncertainty_vote.r')
density
source('C:/dev/experiment/algo_grid.r')
source('C:/dev/experiment/test_uncertainty_vote.r')
source('C:/dev/experiment/algo_grid.r')
source('C:/dev/experiment/test_uncertainty_vote.r')
source('C:/dev/experiment/algo_grid.r')
source('C:/dev/experiment/test_uncertainty_vote.r')
source('C:/dev/experiment/algo_grid.r')
source('C:/dev/experiment/test_uncertainty_vote.r')
source('~/.active-rstudio-document')
source('C:/dev/experiment/test_uncertainty_vote.r')
source('~/.active-rstudio-document')
source('C:/dev/experiment/test_uncertainty_vote.r')
benchmarks2
benchmarks2=data.frame(matrix(unlist(benchmarks2), ncol=5, byrow=T))
source('C:/dev/experiment/test_uncertainty_vote.r')
source('C:/dev/experiment/test_model.r')
test
benchmarks
max(benchmarks$fmeasure)
benchmarks$fmeasure
as.vector(benchmarks$fmeasure)
str(benchmarks)
mode(benchmarks)=numerical
mode(benchmarks$fmeasure)="numerical"
as.numeric(benchmarks$fmeasure)
benchmarks$fmeasure
class(benchmarks$fmeasure)
class(benchmarks$fmeasure)="numeric"
benchmarks$fmeasure
source('C:/dev/experiment/test_model.r')
benchmarks
source('C:/dev/experiment/test_model.r')
data4
source('C:/dev/experiment/test_model.r')
data4
source('~/.active-rstudio-document')
benchmarks
source('C:/dev/experiment/test_model.r')
benchmarks
test=summarySE(as.data.frame(benchmarks),measurevar="fmeasure", groupvars=c("type","num_workers"))
test
summarySE(as.data.frame(benchmarks),measurevar="recall", groupvars=c("type","num_workers"))
runif(100)
mean(runif(100)[1,2])
dd=runif(100)
mean(dd[c(1,2)])
source('C:/dev/experiment/test_random.r')
source('~/.active-rstudio-document')
source('C:/dev/experiment/test_random.r')
?runif
source('~/.active-rstudio-document')
source('C:/dev/experiment/test_random.r')
?pnorm
pnorm(mean=0, sd=1)
pnorm(q=10, mean=0, sd=1)
rnorm(q=10, mean=0, sd=1)
rnorm(10, mean=0, sd=1)
source('C:/dev/experiment/test_random.r')
source('~/.active-rstudio-document')
source('C:/dev/experiment/test_random.r')
choose(10,1000)
choose(100,10)
source('~/.active-rstudio-document')
rnorm(50, mean=0, sd=1)
plot(rnorm(50, mean=0, sd=1))
source('C:/dev/experiment/test_random.r')
results
source('~/.active-rstudio-document')
source('C:/dev/experiment/test_random.r')
test
results
nrow(results)
class(results)
test=summarySE(results,measurevar="result", groupvars=c("num_workers","sample size","limit"))
str(results_
)
str(results)
names(results)[1]="sample_size"
test=summarySE(results,measurevar="result", groupvars=c("num_workers","sample_size","limit"))
test
source('C:/dev/experiment/test_random.r')
results
source('C:/dev/experiment/test_random.r')
results
source('C:/dev/experiment/test_random.r')
ggplot(test,aes(x=num_workers, y=result))+geom_point()
qgplot(test,aes(x=num_workers, y=result),group=limit)
qplot(test,aes(x=num_workers, y=result),group=limit)
qplot(x=num_workers,y=result, data=test,group=limit)
qplot(x=num_workers,y=result, data=test,group=limit,geom = c("smooth", "point"))
qplot(x=num_workers,y=result, data=test,group=limit,geom = c("point"))
qplot(x=num_workers,y=result, data=test,colour=limit,geom = c("point"))
qplot(x=num_workers,y=result, data=test,colour=factor(limit),geom = c("point"))
qplot(x=num_workers,y=result, data=test,colour=factor(limit),geom = c("point","line"))
qplot(x=num_workers,y=result, data=test,colour=factor(sample_size),geom = c("point","line"))
qplot(x=num_workers,y=result, data=test,colour=factor(sample_size),geom = c("point","line"))+ylim(-1,1)
source('C:/dev/experiment/test_random.r')
source('C:/dev/experiment/run_individual_perf_grid.r')
source('~/.active-rstudio-document')
source('C:/dev/experiment/run_individual_perf_grid.r')
source('C:/dev/experiment/test_random.r')
nrow(results)
source('C:/dev/experiment/test_random.r')
tests
source('C:/dev/experiment/test_random.r')
tests
source('C:/dev/experiment/test_random.r')
tests
source('C:/dev/experiment/test_random.r')
results
source('C:/dev/experiment/test_random.r')
test
source('C:/dev/experiment/test_random.r')
tests
tests2=tests
test3=summarySE(tests2,measurevar="result", groupvars=c("sample_size","num_workers","limit"))
p=qplot(x=num_workers,y=result, data=test,colour=factor(sample_size),geom = c("point","line"))+ylim(-1,1)
p=qplot(x=num_workers,y=result, data=test3,colour=factor(sample_size),geom = c("point","line"))+ylim(-1,1)
p
test3
rnorm(100,0,1)
source('C:/dev/experiment/test_random.r')
test4=summarySE(results2,measurevar="result", groupvars=c("num_workers"))
p=qplot(x=num_workers,y=result, data=test4,colour=factor(sample_size),geom = c("point","line"))+ylim(-1,1)
p=qplot(x=num_workers,y=result, data=test4,geom = c("point","line"))+ylim(-1,1)
p
for (num_worker in num_workers){
for (i in 1:100){
#result=mean(runif(num_worker))
result=abs(mean(rnorm(num_worker, mean=0, sd=1)))
total=total+num_worker
results2=rbind(cbind("num_workers"=num_worker,"result"=result),results2)
}
results2=c()
total=0
for (num_worker in num_workers){
for (i in 1:100){
#result=mean(runif(num_worker))
result=abs(mean(rnorm(num_worker, mean=0, sd=1)))
total=total+num_worker
results2=rbind(cbind("num_workers"=num_worker,"result"=result),results2)
}
test4=summarySE(results2,measurevar="result", groupvars=c("num_workers"))
as.d
results2=as.data.frame(results2)
test4=summarySE(results2,measurevar="result", groupvars=c("num_workers"))
test4
for (num_worker in num_workers){
for (i in 1:1000){
#result=mean(runif(num_worker))
result=abs(mean(rnorm(num_worker, mean=0, sd=1)))
total=total+num_worker
results2=rbind(cbind("num_workers"=num_worker,"result"=result),results2)
}
results2=c()
total=0
for (num_worker in num_workers){
for (i in 1:1000){
#result=mean(runif(num_worker))
result=abs(mean(rnorm(num_worker, mean=0, sd=1)))
total=total+num_worker
results2=rbind(cbind("num_workers"=num_worker,"result"=result),results2)
}
print(total)
results2=as.data.frame(results2)
test4=summarySE(results2,measurevar="result", groupvars=c("num_workers"))
test4
source('C:/dev/experiment/test_random.r')
for (num_worker in num_workers){
for (i in 1:5000){
#result=mean(runif(num_worker))
result=abs(mean(rnorm(num_worker, mean=0, sd=1)))
total=total+num_worker
results2=rbind(cbind("num_workers"=num_worker,"result"=result),results2)
}
results2=c()
total=0
for (num_worker in num_workers){
for (i in 1:5000){
#result=mean(runif(num_worker))
result=abs(mean(rnorm(num_worker, mean=0, sd=1)))
total=total+num_worker
results2=rbind(cbind("num_workers"=num_worker,"result"=result),results2)
}
print(total)
results2=as.data.frame(results2)
test4=summarySE(results2,measurevar="result", groupvars=c("num_workers"))
qplot(x=num_workers,y=result, data=test,geom = c("point","line"))+ylim(-1,1)
qplot(x=num_workers,y=result, data=test4,geom = c("point","line"))+ylim(-1,1)
test4
results2=c()
total=0
for (num_worker in c(1,2,3,4,10,15,20,25,30)){
for (i in 1:5000){
#result=mean(runif(num_worker))
result=abs(mean(rnorm(num_worker, mean=0, sd=1)))
results2=rbind(cbind("num_workers"=num_worker,"result"=result),results2)
}
results2=c()
total=0
for (num_worker in c(1,2,3,4,10,15,20,25,30)){
for (i in 1:1000){
#result=mean(runif(num_worker))
result=mean(rnorm(num_worker, mean=0, sd=1))
results2=rbind(cbind("num_workers"=num_worker,"result"=result),results2)
}
print(total)
results2=as.data.frame(results2)
test4=summarySE(results2,measurevar="result", groupvars=c("num_workers"))
qplot(x=num_workers,y=result, data=test4,geom = c("point","line"))+ylim(-1,1)
qplot(x=num_workers,y=sd, data=test4,geom = c("point","line"))+ylim(-1,1)
qplot(x=num_workers,y=sd, data=test4,geom = c("smooth","point","line"))+ylim(-1,1)
qplot(x=num_workers,y=result, data=test4,geom = c("smooth","point","line"))+ylim(-1,1)
qplot(x=num_workers,y=result, data=result2,geom = c("smooth","point","line"))+ylim(-1,1)
qplot(x=num_workers,y=result, data=results2,geom = c("smooth","point","line"))+ylim(-1,1)
results2
str(results2)
qplot(x=num_workers,y=result, data=results2,geom = c("smooth"))+ylim(-1,1)
qplot(x=num_workers,y=result, data=results2,geom = c("point"))+ylim(-1,1)
qplot(x=num_workers,y=result, data=results2,geom = c("errorbar"))+ylim(-1,1)
qplot(x=num_workers,y=result, data=results2,geom = c("errorbar"),ymin=-1, ymax=1)+ylim(-1,1)+
)
qplot(x=num_workers,y=result, data=results2,geom = c("errorbar"),ymin=-1, ymax=1)+ylim(-1,1)
qplot(x=num_workers,y=result, data=results2,geom = c("boxplot"),ymin=-1, ymax=1)+ylim(-1,1)
qplot(x=num_workers,y=result, data=results2,geom = c("boxplot"))+ylim(-1,1)
qplot(x=factor(num_workers),y=result, data=results2,geom = c("boxplot"))+ylim(-1,1)
source('C:/dev/experiment/test_random.r')
qplot(x=factor(num_workers),y=result, data=results,geom = c("boxplot"))+ylim(-1,1)
qplot(x=factor(num_workers),y=result, data=results,geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size)
qplot(x=factor(num_workers),y=result, data=results,geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size) +geom_boxplot(aes(x=factor(num_workers),y=result),data=results2)
results2
str(results2)
qplot(x=factor(num_workers),y=result, data=results,geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size) +geom_boxplot(aes(x=factor(num_workers),y=result),data=results2)
qplot(x=factor(num_workers),y=result, data=results,geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size)
source('C:/dev/experiment/test_random.r')
test5
qplot(x=factor(num_workers),y=test5, data=results,geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size)
qplot(x=factor(num_workers),y=result, data=test5, data=results,geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size)
qplot(x=factor(num_workers),y=result, data=test5, data=test5,geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size)
test5
qplot(x=factor(num_workers),y=result, data=test5, geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size)
source('C:/dev/experiment/test_random.r')
test5
class(test5)
qplot(x=factor(num_workers),y=result, data=test5, geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size)
source('~/.active-rstudio-document')
source('C:/dev/experiment/test_random.r')
qplot(x=factor(num_workers),y=result, data=test5, geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size)
source('C:/dev/experiment/test_random.r')
nrow(test5)
qplot(x=factor(num_workers),y=result, data=test5, geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size)
source('C:/dev/experiment/test_random.r')
qplot(x=factor(num_workers),y=result, data=test5, geom = c("boxplot"))+ylim(-1,1)+ facet_wrap(~ sample_size)
source('C:/dev/experiment/test_random.r')
