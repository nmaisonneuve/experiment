bj$members
bj=birch(ddd,radius=(0.001/112))
bj
birch(as.matrix(data[data$assignID %in% c(1,2,3,4,5,6,7,8),1:2]),radius=0.007/112)
birch(as.matrix(data[data$assignID %in% c(1,2,3,4,5,6,7,8),1:2]),radius=(0.005/112))
ddd-data[data$assignID %in% c(1,2,3,4,5,6,7,8),1:2]
ddd=data[data$assignID %in% c(1,2,3,4,5,6,7,8),1:2]
plot(ddd)
birch(ddd,radius=(0.005/112))
ddd
as.matrix(ddd)
as.matrix(ddd)[1:10,]
birch(ddd,radius=(0.005/112))
birch(as.matrix(ddd),radius=(0.005/112))
birch(as.matrix(ddd),radius=(0.00005/112))
birch(as.matrix(ddd),radius=(0.00005))
birch(as.matrix(ddd),radius=(0.005/(112*2))
)
birch(as.matrix(ddd),radius=0.000001)
birch(as.matrix(ddd),radius=0.0000001)
birch(as.matrix(ddd),radius=0.00000001)
birch(as.matrix(ddd),radius=0.00000001)$members
clusters=birch(as.matrix(ddd),radius=0.00000001)$members
length(clusters)
clusters[[1]]
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
clusters
source('C:/dev/parallel/R/test_new_algo.r')
ddd
plot(ddd)
ggplot(ddd, aes(x=lat, y=lon) , group=cluster)
qgplot(as.data.frame(ddd), aes(x=lat, y=lon) , group=cluster)
qplot(as.data.frame(ddd), aes(x=lat, y=lon) , group=cluster)
qplot(as.data.frame(ddd), lat, lon , group=cluster)
as.data.frame(ddd)
str(as.data.frame(ddd))
qplot(as.data.frame(ddd), aes(lat, lon))+geom_point()
ggplot(as.data.frame(ddd), aes(lat, lon))+geom_point()
ggplot(as.data.frame(ddd), aes(lat, lon))+geom_point(aes(colour = cluster))
ggplot(as.data.frame(ddd), aes(lat, lon))+geom_point(aes(colour = factor(cluster)))
ggplot(as.data.frame(ddd), aes(lat, lon))+geom_point(aes(shape = factor(cluster)))
ggplot(as.data.frame(ddd), aes(lat, lon))+geom_point(aes(colour = factor(cluster)))+ scale_colour_brewer()
random
ran
rand
?random
??random
sample(1,0)
sample(1,1)
sample(0:1,1)
sample(0:1,1)
sample(0:5,1)
sample(0:5,1)
sample(0:5,1)
sample(0:1000,1)
sample(0:1000,1)
sample(0:1000,1)
sample(0:1000,1)
source('C:/dev/parallel/R/test_new_algo.r')
ggplot(as.data.frame(ddd), aes(lat, lon))+geom_point(aes(colour = factor(cluster)))
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
print(p)
ddd
range(ddd)
range(ddd$lat)
diff(ddd$lat)
range(ddd$lat)
max(ddd$lat)-min(ddd$lon)
max(ddd$lat)-min(ddd$lat)
(max(ddd$lat)-min(ddd$lat))
(max(ddd$lat)-min(ddd$lat))*6400
11/6400
0.007/6400
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
dist(ddd)
?dist
d=dist(ddd)
d[1,1]
str(d)
dist[1]
dist[1,]
dist[,]
x <- matrix(rnorm(100), nrow=5)
x
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
source('C:/dev/parallel/R/test_new_algo.r')
prin(p)
print(p)
source('C:/dev/parallel/R/test_new_algo.r')
print(p)
p=ggplot(as.data.frame(ddd), aes(lon, lat))+geom_point(aes(colour = factor(cluster)))+opts(legend.position="none")
p
p=ggplot(as.data.frame(ddd), aes(lon, lat))+geom_point(aes(colour = factor(cluster)))+opts(legend.position="none",plot.background=theme_blank())
p
p=ggplot(as.data.frame(ddd), aes(lon, lat))+geom_point(aes(colour = factor(cluster)))+opts(legend.position="none",plot.background= theme_rect(colour = NA)
)
p
p=ggplot(as.data.frame(ddd), aes(lon, lat))+geom_point(aes(colour = factor(cluster)))+opts(legend.position="none", legend.background = theme_rect(colour = NA))
p
p=ggplot(as.data.frame(ddd), aes(lon, lat))+geom_point(aes(colour = factor(cluster)))+opts(legend.position="none", legend.background = theme_rect(colour = NA),plot.background=theme_rect(colour = 'purple'))
p
p=ggplot(as.data.frame(ddd), aes(lon, lat))+geom_point(aes(colour = factor(cluster)))+opts(legend.position="none", legend.background = theme_rect(colour = NA),background.colour="white")
p
p=ggplot(as.data.frame(ddd), aes(lon, lat))+geom_point(aes(colour = factor(cluster)))+opts(legend.position="none", panel.background=theme_blank(),background.colour="white")
p
p=ggplot(as.data.frame(ddd), aes(lon, lat))+geom_point(aes(colour = factor(cluster)))+opts(legend.position="none", panel.background=theme_blank())
p
p=ggplot(as.data.frame(ddd), aes(lon, lat))+
geom_point(aes(colour = factor(cluster)))+
opts(legend.position="none",panel.background=theme_blank(),
axis.text.x=theme_blank(), axis.text.y=theme_blank(),
axis.title.x=theme_blank(), axis.title.y=theme_blank(),
axis.ticks=theme_blank())
p
p=ggplot(as.data.frame(ddd), aes(lon, lat))+
geom_point(aes(colour = factor(cluster)))+
opts(legend.position="none",panel.background=theme_blank(),
axis.text.x=theme_blank(), axis.text.y=theme_blank(),
axis.title.x=theme_blank(), axis.title.y=theme_blank(),
axis.ticks=theme_blank(), panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank())
p
source('C:/dev/parallel/R/test_new_algo.r')
p
source('C:/dev/parallel/R/test_new_algo.r')
p
source('C:/dev/parallel/R/test_new_algo.r')
p
source('C:/dev/parallel/R/test_new_algo.r')
p
source('C:/dev/parallel/R/test_new_algo.r')
p
source('C:/dev/parallel/R/test_new_algo.r')
p
ddd
ddd
centroid=aggregate(ddd[,1:2], list(data$cluster), mean)
support=aggregate(ddd[,3], list(data$cluster), sum)
centroid=aggregate(ddd[,1:2], list(ddd$cluster), mean)
support=aggregate(ddd[,3], list(ddd$cluster), sum)
str(ddd)
centroid=aggregate(ddd[,1:2], list(ddd$cluster), mean)
ddd[,1:2]
list(ddd$cluster)
aggregate(ddd[,1:2], list(ddd$cluster), mean)
aggregate(as.matrix(ddd[,1:2]), list(ddd$cluster), mean)
?aggregate
aggregate(as.matrix(ddd[,1:2]), by=list(ddd$cluster), mean)
aggregate
aggregate
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/run_plot_grid.r')
data.q
str(data.q)
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/run_test_grid.r')
source('C:/dev/parallel/R/run_test_grid.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_test_grid.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_test_grid.r')
source('C:/dev/parallel/R/run_test_grid.r')
source('C:/dev/parallel/R/run_test_grid.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_test_grid.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_test_grid.r')
source('C:/dev/parallel/R/run_test_grid.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_test_grid.r')
data.q
source('C:/dev/parallel/R/run_test_grid.r')
data.q
?append
source('C:/dev/parallel/R/run_test_grid.r')
data.q
?push
source('C:/dev/parallel/R/run_test_grid.r')
data.q
str(data.q)
source('C:/dev/parallel/R/run_test_grid.r')
data.q
str(data.q)
source('C:/dev/parallel/R/run_test_grid.r')
data.q
str(data.q)
source('C:/dev/parallel/R/run_test_grid.r')
str(data.q)
cols(data.q)
col(data.q)
ncol(data.q)
source('C:/dev/parallel/R/run_test_grid.r')
ncol(data.q)
nrow(data.q)
32*35
res
38*35
class(data.q)
str(data.q)
data.q[,1:2]
?colsum
?sumcol
??sumcol
??colsum
?colSums
colSums(data[,1:2])
colSums(data.q[,1:2])
rowSums(data.q[,1:2])
cbind(data.q[,1], data.q[,2],rowSums(data.q[,1:2])
)
cbind(data.q[,1], data.q[,2],rowSums(data.q[,c(1,2))
cbind(data.q[,1], data.q[,2],rowSums(data.q[,c(1,2)))
cbind(data.q[,1], data.q[,2],rowSums(data.q[,c(1,2)]))
cbind(data.q[,2], data.q[,4],rowSums(data.q[,c(2,4)]))
colSums(data.q[,1:2])
cbind(data.q[,1], data.q[,2],rowSums(data.q[,c(1,2)))
cbind(data.q[,1], data.q[,2],rowSums(data.q[,c(1,2)]))
rowSums(data.q[,c(1,2)])
ifelse(rowSums(data.q[,c(1,2)])>=1,TRUE,FALSE)
d=ifelse(rowSums(data.q[,c(1,2)])>=1,TRUE,FALSE)
ref.q
as.vector(ref.q)
ref=ifelse(as.vector(ref.q)>=1, TRUE,FALSE)
ref
length(ref)
length(d)
d& ref
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_grid_algo.r')
source('C:/dev/parallel/R/run_grid_algo.r')
source('C:/dev/parallel/R/run_grid_algo.r')
source('C:/dev/parallel/R/run_grid_algo.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_grid_algo.r')
source('C:/dev/parallel/R/algo_grid.r')
source('C:/dev/parallel/R/run_grid_algo.r')
source('C:/dev/parallel/R/run_grid_algo.r')
source('C:/dev/parallel/R/run_grid_algo.r')
source('C:/dev/parallel/R/run_grid_algo.r')
source('C:/dev/parallel/R/run_grid_algo.r')
cut(1,10)
cut(1,10)
cut(0.2,10)
?cut
cut_interval(10,10)
table(cut_interval(1:100, n = 10))
(cut_interval(100, n = 10))
(cut_interval(1:100, n = 10))
seq(0.1,1,10)
seq(0.1,1,0.2)
seq(0.1,1,0.15)
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/run_plot_grid.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('~/.active-rstudio-document')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
data
data.ppp
str(data.ppp)
data.ppp$xrange
data.ppp[,1:2]
data.ppp$yrange
data.ppp$y
data.ppp$x
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
as.data.frame(data)
str(as.data.frame(data))
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
ref@coords[,1]
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
p+opts(aspect.ratio=1)
p+opts(aspect.ratio=1)+ coord_map()
p+ coord_map()
p+ coord_map()
p+ coord_map() +ops(panel.border = theme_border(type=9))
p+ coord_map() +opts(panel.border = theme_border(type=9))
p+ coord_map() +opts(panel.border=theme_rect(colour="black",size=0.71))
p+ coord_map() +opts(panel.border=theme_rect(colour="black",size=1))
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
aggregate
setwd("C:/dev/parallel/R")
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/parallel_cluster.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
as.data.frame(datac1)
str(as.data.frame(datac1))
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
datac1
?recode.variables
??recode.variables
library(Deducer)
source('C:/dev/parallel/R/run_dca_plot.r')
fix(aggregate)
aggregate
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point(aes(size = 0.5))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point(aes(size = 2))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point(aes(size = 2))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+  geom_point(aes(size = 2))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+  geom_point(aes(size = 0))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point(aes(size = 10))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point(aes(size = 10,colour=cyl))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point(aes(size = 10,colour=cluster))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point(aes(size = 1,colour=cluster))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point()+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point(aes())+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point(aes(size=0.1))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point(aes(size=0.0001))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point()+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
source('C:/dev/parallel/R/run_density_plot.r')
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point()+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
source('C:/dev/parallel/R/run_density_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
p=ggplot(as.data.frame(data_raw), aes(coords.x1, coords.x2))+
geom_point(aes(size=1))+ blank+
xlim(min(ref@coords[,1]),max(ref@coords[,1]))+ylim(min(ref@coords[,2]),max(ref@coords[,2]))
print(p)
source('C:/dev/parallel/R/run_dca_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
source('~/.active-rstudio-document')
source('C:/dev/parallel/R/run_density_plot.r')
source('C:/dev/parallel/R/run_density_plot.r')
citation()
source('C:/dev/experiment/test_raster.r')
biocLite("EBImage")
sessionInfo()
setwd("C:/dev/experiment")
source('C:/dev/experiment/plot_fig_agreement.r')
source('C:/dev/experiment/plot_fig_parallel.r')
?ggsave
source('C:/dev/experiment/plot_fig_parallel.r')
source('C:/dev/experiment/run_grid_algo.r')
source('C:/dev/experiment/plot_fig_parallel.r')
p1
source('C:/dev/experiment/plot_fig_parallel.r')
data
input_dca=sprintf("%s_collective_output3_dca.csv",input_root)
output_dca <- read.csv(input_dca, encoding = "UTF-8")
names(output_dca)[7]=c("min_dist")
tmp=output_dca
ouput_dca
output_dca
output_dca=data.frame(cbind(fmeasure=tmp$fmeasure,precision=tmp$precision,recall=tmp$recall,num_workers=tmp$num_workers, num_voters=tmp$num_voters,min_dist=tmp$dist))
data=output_dca
sum_data<-summarySE(data,measurevar="fmeasure", groupvars=c("num_voters,num_workers"))
workers=unique(data$num_workers)
sum_data<-summarySE(data,measurevar="fmeasure", groupvars=c("num_workers","num_voters"))
sum_data
workers=unique(data$num_workers)
best_voters=apply(workers,1,FUN=function(x){
max_idx=which.max(sum_data$fmeasure[sum_data$num_workers==x])
voter=sum_data$num_voters[sum_data$num_workers==x][max_idx]
return(voter)}
)
best_voters=vapply(workers,1,FUN=function(x){
max_idx=which.max(sum_data$fmeasure[sum_data$num_workers==x])
voter=sum_data$num_voters[sum_data$num_workers==x][max_idx]
return(voter)})
best_voters
workers
sum_data<-summarySE(data,measurevar="fmeasure", groupvars=c("num_workers","num_voters"))
num_workers=unique(data$num_workers)
best_voters=vapply(num_workers,1,FUN=function(x){
max_idx=which.max(sum_data$fmeasure[sum_data$num_workers==x])
voter=sum_data$num_voters[sum_data$num_workers==x][max_idx]
return(voter)})
best_parameters=cbind(num_workers,best_voters)
best_parameters
idx=apply(data_d,1,FUN=function(x){return(length(which(best_parameters[,1] == x[1] & best_parameters[,2] == x[2]))>0)})
data_d=cbind(data$num_workers,data$num_voters)
sum_data<-summarySE(data,measurevar="fmeasure", groupvars=c("num_workers","num_voters"))
num_workers=unique(data$num_workers)
best_voters=vapply(num_workers,1,FUN=function(x){
max_idx=which.max(sum_data$fmeasure[sum_data$num_workers==x])
voter=sum_data$num_voters[sum_data$num_workers==x][max_idx]
return(voter)})
best_parameters=cbind(num_workers,best_voters)
idx=apply(data_d,1,FUN=function(x){return(length(which(best_parameters[,1] == x[1] & best_parameters[,2] == x[2]))>0)})
idx
source('C:/dev/experiment/plot_fig_parallel.r')
source('~/.active-rstudio-document')
source('C:/dev/experiment/plot_fig_parallel.r')
source('C:/dev/experiment/plot_iterative.r')
source('C:/dev/experiment/plot_iterative_sample.r')
